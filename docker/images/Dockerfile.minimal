# 最小化 Dockerfile 用于快速测试
FROM python:3.11-slim

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

# 安装最基础的系统依赖
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 使用阿里云镜像源分别安装核心依赖（更稳定快速）
RUN pip install --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple/ \
    --trusted-host mirrors.aliyun.com --timeout 1000 --retries 3 \
    Flask>=3.0.0
RUN pip install --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple/ \
    --trusted-host mirrors.aliyun.com --timeout 1000 --retries 3 \
    Flask-CORS>=4.0.0
RUN pip install --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple/ \
    --trusted-host mirrors.aliyun.com --timeout 1000 --retries 3 \
    redis>=3.5.3
RUN pip install --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple/ \
    --trusted-host mirrors.aliyun.com --timeout 1000 --retries 3 \
    mysql-connector-python>=8.1.0
RUN pip install --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple/ \
    --trusted-host mirrors.aliyun.com --timeout 1000 --retries 3 \
    gunicorn>=21.0.0

# 复制核心应用文件
COPY app.py .
COPY config/ ./config/
COPY utils/ ./utils/
COPY api/ ./api/

# 创建必要目录
RUN mkdir -p logs

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=2 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# 暴露端口
EXPOSE 5000

# 启动命令（开发模式）
CMD ["python", "app.py"]
